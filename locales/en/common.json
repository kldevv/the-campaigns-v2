{
  "logo": {
    "name": "TheCampaign"
  },
  "layout": {
    "footer": {
      "welcome": "Welcome to TheCampaign Welcome to TheCampaign Welcome to TheCampaign Welcome to TheCampaign"
    },
    "header": {
      "menuItems": {
        "explore": "Explore",
        "create": "Create",
        "about": "About"
      }
    }
  },
  "components": {
    "requestCard": {
      "id": "ID",
      "amount": "Amount",
      "recipient": "Recipient",
      "description": "Description",
      "status": "Status",
      "required": "Required APR.",
      "current": "Current APR. / REJ.",
      "action": "Action",
      "resolved": "This request is resolved",
      "canceled": "This request is canceled",
      "approved": "You have approved this request",
      "rejected": "You have rejected this request"
    },
    "customizedRequestModal": {
      "title": "{{action}} Request",
      "content": "Do you want to {{action}} request ID {{requestID}} of {{campaignName}}?",
      "cancel": "Cancel"
    }
  },
  "addons": {
    "walletNotConnected": {
      "title": "Wallet is Not Connected",
      "message": "An Ethereum wallet is required to use TheCampaign. Please check your wallet status."
    },
    "error": {
      "general": "Sorry, something went wrong"
    },
    "campaign": {
      "locked": "This campaign is locked",
      "open": "This campaign is open",
      "owner": "You are the owner of this campaign",
      "patron": "You are a patron of this campaign"
    }
  },
  "containers": {
    "walletButton": {
      "connect": "Connect Wallet"
    },
    "createButton": {
      "create": "Create"
    },
    "newRequestModal": {
      "button": "New Request",
      "header": "Issue a New Request for {{name}}",
      "confirm": "Issue",
      "cancel": "Cancel",
      "required": " Required fields",
      "fields": {
        "amount": {
          "label": "Amount",
          "description": "How much to send to the recipient"
        },
        "recipient": {
          "label": "Recipient",
          "description": "Whom the amount is sent to"
        },
        "description": {
          "label": "Description",
          "description": "Extra description for this request"
        }
      }
    },
    "contributeModal": {
      "button": "Contribute",
      "header": "Contribution to {{name}}",
      "confirm": "Confirm",
      "cancel": "Cancel",
      "input": "Amount",
      "content1": "How much would you like to contribute to the campaign?",
      "content2": "The minimum amount of this campaign is ",
      "content3": " wei.",
      "content4": "Each person can make at most 1 contribution."
    },
    "lockButton": "Lock",
    "unlockButton": "Unlock",
    "createCampaignForm": {
      "require": " Required fields",
      "fields": {
        "name": {
          "label": "Name",
          "description": "Make an unique name for your campaign"
        },
        "minContribution": {
          "label": "Minimum Contribution",
          "description": "Set a minimum contribution required for people to join your campaign"
        },
        "description": {
          "label": "Extra Description",
          "description": "Add an extra description to you campaign, not required"
        }
      },
      "success": {
        "title": "You're all set",
        "message": "Your campaign is successfully deployed. Please refresh the page to create a second campaign or go to Explore page to see the newly deployed campaigns."
      }
    },
    "campaignBulletin": {
      "patrons": " {{count}} Patrons"
    },
    "campaignProfileDetail": {
      "at": "At ",
      "createdBy": "Created by "
    },
    "campaignProfileStatus": {
      "patrons": "Patrons",
      "totalBalance": "Total Balance",
      "activeBalance": "Active Balance",
      "minContribution": "Minimum Contribution"
    },
    "approveRequestModal": {
      "trigger": "Approve"
    },
    "eventsExplorer": {
      "header": {
        "type": "Type",
        "description": "Description",
        "blockNumber": "Block Number"
      },
      "description": "From: {{address}}, RequestID: {{requestID}}"
    }
  },
  "screens": {
    "index": {
      "screen1": {
        "title": "Discover, create, and participate on-chain campaigns",
        "subtitle": " is where people exchange ideas, promises, and rewards",
        "emphasis": " in a fair matter."
      },
      "screen2": {
        "title": "Explore all the Exciting Campaigns",
        "subtitle": "Find your ideal investing opportunities",
        "button": "Explore"
      },
      "screen3": {
        "title": "Understand: ",
        "button": "Learn More",
        "info": {
          "initiator": {
            "title": "Become an Initiator",
            "description": "Initiate campaigns to support your inspiring ideas and distribute resources fairly"
          },
          "patron": {
            "title": "Become a Patron",
            "description": "Sponsor the most promising ideas funded under public reviews through Ethereum"
          }
        }
      }
    },
    "createCampaign": {
      "title": "Create A New Campaign"
    },
    "campaign": {
      "title": "Explore Campaigns"
    },
    "campaignDetail": {
      "screen2": {
        "requests": "Requests",
        "events": "Events"
      }
    },
    "about": {
      "screen1": {
        "header": "About",
        "content": "TheCampaign is an interactive website that help solve issues that might happen in the ordinary crowd sourcing platform, where the campaign owners break the promises and misuse the funding from time to time should the platform be lacking in proper regulations.",
        "howItWorks": {
          "header": "How It Works",
          "content": "We put all the campaigns on the Ethereum chain in the forms of smart contracts, where the owner, patrons, and all the interaction are recorded. The owner needs approvals more than half of the current patrons to transfer the funding to a different Ethereum address."
        },
        "stepByStep": {
          "header": "Step by Step",
          "content": {
            "li1": "On the Create page, the users can create a customized campaign by filling out the information, including the campaign name, the minimum contribution to join the campaign, and optionally the description. TheCampaign will take the information to the Master Campaign and create your own smart contract",
            "li2": "On the Explore page, the users can explore all the campaigns launched through the Master Campaign, and the users can continue exploring the details of any of those by clicking on the campaign card",
            "li3": "While exploring the campaign detail, any users can choose to contribute and join the campaign as long as the minimum contribution is match. Each address can only contribute once. The owner (creator) of the campaign can lock the campaign if there are more than 1 patron",
            "li4": "Once the campaign is locked, the campaign owner can issue a new request to distribute the reserved Ether in the campaign, freeze the requested amount, and reduce the active reserve, If there are more than half of the patron approve such a request, the request is approved and wait for the owner to resolve and send the Ether. If the patron is already voted, or the request is rejected or canceled, the patrons can no longer participate in the request",
            "li5": "The owner can choose to unlock the campaign to allow more new users to join the campaign, and thus raise the reserve for more future requests. While the number of patrons increases, the required approval for the request to be approved is also increased"
          }
        }
      },
      "screen2": {
        "header": "The Developerment",
        "developer": {
          "header": "Meet the Developer",
          "content": "Kuan-You Lin (Yoyo) is a software engineer who love learning and making things happened. Learn more about him by visiting one of his profile websites."
        },
        "technology": {
          "header": "Technology Behind",
          "content": "TheCampaign is created by using: typescript, react.js, next.js, react-semantic-ui, solc, ganache, truffle, solidity, web3, eslint, mocha, react-i18next"
        }
      }
    }
  }
}
